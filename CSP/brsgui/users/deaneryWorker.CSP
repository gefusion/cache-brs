	<html>
	<head>
	<title>	Страница сотрудника деканата </title>
		<link rel="stylesheet" type="text/css" href="/brsgui/css/bootstrap.css">
		<link rel="stylesheet" type="text/css" href="/brsgui/css/custom.css">
		<link rel="stylesheet" type="text/css" href="/brsgui/css/font-awesome.min.css">
	</head>
	<body ng-controller="ctrl">	
		<div class="container-fluid">
			<input ng-model="user" name="user" type="hidden" value="Users.DeaneryWorker"/>
			<input ng-model="chair" name="chair" type="hidden" value="Data.Chair"/>
			<input ng-model="group" name="group" type="hidden" value="Data.Group"/>
			<input ng-model="speciality" name="speciality" type="hidden" value="Data.Speciality"/>
			<input ng-model="curator" name="curator" type="hidden" value="Users.Teacher"/>
			<input ng-model="chairWorker" name="chairWorker" type="hidden" value="Users.ChairWorker"/>
			
	        <header class="ng-isolate-scope">
	        	<nav class="navbar navbar-default">
					<div class="navbar-header">
						<a class="navbar-brand ng-binding">Страница сотрудника деканата</a>
					</div>
					<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
						<ul class="nav navbar-nav">
							<li id="first" ng-click="dataList=false;chairList=false;groupList=false;specialityList=false;curatorList=false;chairWorkerList=false;"  
							class="active"><a href="#chairs">Управление кафедрами</a></li>
							<li id="second" ng-click="dataList=false;chairList=true;groupList=true;specialityList=false;curatorList=false;chairWorkerList=false;"  
							class=""><a href="#groups">Управление группами</a></li>
							<li id="third" ng-click="dataList=false;chairList=true;groupList=false;specialityList=true;curatorList=false;chairWorkerList=false;"  
							class=""><a href="#specialities">Управление специальностями</a></li>
							<li id="fourth" ng-click="dataList=false;chairList=true;groupList=false;specialityList=false;curatorList=true;chairWorkerList=false;"  
							class=""><a href="#curators">Управление кураторами</a></li>
							<li id="fifth" ng-click="dataList=false;chairList=true;groupList=false;specialityList=false;curatorList=false;chairWorkerList=true;" 
							class=""><a href="#chair-workers">Управление сотрудниками кафедры</a></li>
							<li id="sixth" 
							class=""><a href="#("/brs/logout")#">Выйти</a></li>
	      				</ul>
	      				<h5 class="user-info"><br>
	 					Пользователь: #($username)#, факультет <div style="display:inline-block;" id="facultyInfo"></div>
						</h5>
	      			</div>
	    	</header>
	    	<div ng-hide="dataList">
	    		<div ng-hide="chairList" class="container">
	    			<article><h3>Список кафедр</h3></article>
	    			<div class="regMessage"></div>
	    				<p ng-show="data.length == 0">Нет данных для отображения</p>
	    				<section ng-hide="data.length == 0">
	            			<ui-grid source="chairs">
	                			<column name="Title" title="Название" sortable="true"></column>
	                			<column name="TitleShort" title="Сокращение" sortable="true"></column>
	                			<column name="Chief" title="Завкафедры" sortable="true"></column>
	            			</ui-grid>
	        			</section>
	    		</div>
	    		<div ng-show="groupList" class="container">
	    			<article><h3>Список групп</h3></article>
	    			<div class="regMessage"></div>
	    				<p ng-show="data.length == 0">Нет данных для отображения</p>
	    				<section onload="actTabs()" ng-hide="data.length == 0">
	            			<ui-grid source="groups">
	            				<column name="Title" title="Номер группы" sortable="true"></column>
	                			<column name="Curator" title="Куратор" sortable="true"></column>
	                			<column name="Entrance" title="Дата поступления" sortable="true"></column>
	                			<column name="Code" title="Код специальности" sortable="true"></column>
	            			</ui-grid>
	        			</section>
	    		</div>
	    		<div ng-show="specialityList" class="container">
	    			<article><h3>Список специальностей</h3></article>
	    			<div class="regMessage"></div>
	    				<p ng-show="data.length == 0">Нет данных для отображения</p>
	    				<section onload="actTabs()" ng-hide="data.length == 0">
	            			<ui-grid source="specialities">
	                			<column name="Code" title="Код" sortable="true"></column>
	                			<column name="Title" title="Название" sortable="true"></column>
	            			</ui-grid>
	        			</section>
	    		</div>
	    		<div ng-show="curatorList" class="container">
	    			<article><h3>Список кураторов</h3></article>
	    			<div class="regMessage"></div>
	    				<p ng-show="data.length == 0">Нет данных для отображения</p>
	    				<section onload="actTabs()" ng-hide="data.length == 0">
	            			<ui-grid source="curators">
	                			<column name="Username" title="Имя пользователя" sortable="true"></column>
	                			<column name="Name" title="Имя" sortable="true"></column>
	                			<column name="Surname" title="Фамилия" sortable="true"></column>
	                			<column name="Patronymic" title="Отчество" sortable="true"></column>
	            			</ui-grid>
	        			</section>	
	    		</div>
	    		<div ng-show="chairWorkerList" class="container">
	    			<article><h3>Список сотрудников кафедры</h3></article>
	    			<div class="regMessage"></div>
	    				<p ng-show="data.length == 0">Нет данных для отображения</p>
	    				<section onload="actTabs()" ng-hide="data.length == 0">
	            			<ui-grid source="chairWorkers">
	            				<column name="Chair" title="Кафедра" sortable="true"></column>
	                			<column name="Username" title="Имя пользователя" sortable="true"></column>
	                			<column name="Name" title="Имя" sortable="true"></column>
	                			<column name="Surname" title="Фамилия" sortable="true"></column>
	            			</ui-grid>
	        			</section>	
	    		</div>
	    		<div ng-controller="userForm" class="container" ng-show="userForm">
	    			<section>
						<div class="container">
	    					<h3 ng-show="rUser">Регистрация нового тестового пользователя</h3>
	    					<h3 ng-hide="uUser">Изменение тестового пользователя</h3>
	    					<div class="regMessage"></div>
	    						<form class="form-horizontal" method="post" role="form">
	    							<div ng-show="select" class="form-group">
	            						<label class="control-label col-sm-2">
	            						Имя изменяемого пользователя</label>
	            						<div class="col-sm-5">
	                    					<select name="userist">
	                    					</select>
	            						</div>
	        						</div>
	       	 						<div ng-hide="username" class="form-group">
	            						<label class="control-label col-sm-2">Имя пользователя</label>
	            						<div class="col-sm-5">
	                    					<input type="login" class="form-control" 
	                    					name="Username" ng-model="Username" />
	            						</div>
	        						</div>
	        						<div class="form-group">
	            						<label class="control-label col-sm-2">Имя</label>
	            						<div class="col-sm-5">
	                						<input type="text" class="form-control" 
	                						name="Name" ng-model="Name" />
	            						</div>
	        						</div>
	        						<div class="form-group">
	            						<label class="control-label col-sm-2">Фамилия</label>
	            						<div class="col-sm-5">
	             		   					<input type="text" class="form-control" 
	             		   					name="Surname" ng-model="Surname" />
	            						</div>
	        						</div>
	         						<div class="form-group"> 
	       		     					<div class="col-sm-offset-2 col-sm-10">
	          		  						<input ng-click="regUser()" type="submit" 
	          		  						ng-show="reg" class="btn btn-default" value="Создать">
	       		         					<input ng-click="updUser()" type="submit" 
	       		         					ng-hide="upd" class="btn btn-default" value="Изменить">
	          		  					</div>
	        						</div>
	        						<div class="form-group">
	           		 					<div class="col-sm-5">
	           		     					<input type="hidden" class="form-control" 
	           		     					name="Roles" ng-model="roles" value="Test" />
	            						</div>
	        						</div>
	    						</form>
						</div>
	    			</section>  
	    		</div>
	    	</div>
	    </div>
	<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/angularjs/1.2.3/angular.min.js"></script>
	<script type="text/javascript" src="/brsgui/js/ui-source.js"></script>
	<script type="text/javascript" src="/brsgui/js/ui-grid.js"></script>
	<script type="text/javascript">
	var global = new Object();

	// Active tabs realization
	$('li').click(function (){
		$("li").removeClass("active");
		$(this).addClass("active");
	});

	// Setting ng-app and adding table realization
	angular.element(document).ready(function() {
	            angular.bootstrap(document, ['UiGridModule', 'UiSourceModule']);
	        });
	// Main controller init
	function ctrl($scope,$http) {
	   var cls = document.getElementsByTagName("input").user.value;
	   $http.get("http://localhost:57772/brs/form/objects/" + cls + "/all?filter=Username eq #($username)#")
	   .success(function(data) {
		   localStorage.setItem('UserID', data.children[0].Faculty);
	   }).error(function(data, status) {
	       alert("["+status+"]   Ошибка при загрузки пользователей!["+data+"]");
	   });
	   cls = document.getElementsByTagName("input").chair.value;
	   $http.get("http://localhost:57772/brs/form/objects/" + cls + "/chairs?filter=Faculty->ID eq "+localStorage.getItem('UserID'))
	   .success(function(data) {
	        $scope.chairs = data.children;
	        $("#facultyInfo").text(data.children[0].Faculty);
	        var chairs = new Object();
	        chairs.total = 0;
	        $.each($scope.chairs, function(key,value){
		        chairs[key] = value.ID;
		       	chairs["total"]++;
		    });
		    localStorage.setItem('chairs', JSON.stringify(chairs));
	        console.log($scope.chairs);
	   }).error(function(data, status) {
	       alert("["+status+"]   Ошибка при загрузки пользователей!["+data+"]");
	   });
	   
	   cls = document.getElementsByTagName("input").group.value;
	   $http.get("http://localhost:57772/brs/form/objects/" + cls + "/groups?filter=Faculty->ID eq " + localStorage.getItem('UserID'))
	   .success(function(data) {
	        $scope.groups = data.children;
	        console.log($scope.groups);
	   }).error(function(data, status) {
	       alert("["+status+"]   Ошибка при загрузки пользователей!["+data+"]");
	   });
	   
	   cls = document.getElementsByTagName("input").speciality.value;
	   $http.get("http://localhost:57772/brs/form/objects/" + cls + "/all?filter=Faculty->ID eq " + localStorage.getItem('UserID'))
	   .success(function(data) {
	        $scope.specialities = data.children;
	        console.log($scope.specialities);
	   }).error(function(data, status) {
	       alert("["+status+"]   Ошибка при загрузки пользователей!["+data+"]");
	   });
	   
	   cls = document.getElementsByTagName("input").curator.value;
	   $http.get("http://localhost:57772/brs/form/objects/" + cls + "/all")
	   .success(function(data) {
	        $scope.curators = data.children;
	        console.log($scope.curators);
	   }).error(function(data, status) {
	       alert("["+status+"]   Ошибка при загрузки пользователей!["+data+"]");
	   });
	   
	   cls = document.getElementsByTagName("input").chairWorker.value;
	   var chairs = JSON.parse(localStorage.getItem('chairs'));
	   $http.get("http://localhost:57772/brs/form/objects/" + cls + "/CW?filter=Chair in "+ chairs[0] +"~"+ chairs[chairs.total-1])
	   .success(function(data) {
	        $scope.chairWorkers = data.children;
	        console.log($scope.chairWorkers);
	   }).error(function(data, status) {
	       alert("["+status+"]   Ошибка при загрузки пользователей!["+data+"]");
	   });
	}
	// Creating new user
	function userForm($scope, $http) {
		
	   $scope.regUser = function(){ 
	        	var role = document.getElementsByTagName("input").role.value;
	        	console.log(role);
	        	var cls = "Users."+role;
	        	var url = "http://localhost:57772/brs/form/object/"+cls;
	            var dataObj = {
		  			_class : cls,
	                Username : $scope.Username,
	                Name : $scope.Name,
	                Surname : $scope.Surname
	            }; 
	            var res = $http.post(url, JSON.stringify(dataObj));
	            res.success(function(data, status, headers, config) {
	            var objId = data.Id;
	 				$('.regMessage').append("<div class='alert alert-success alert-dismissable'>"+
	 				"<a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>"+
	 				"Пользователь зарегистрирован!</div>");
	            	$scope.Login='';
	            	$scope.Password='';
	            	$scope.Surname='';
	            	$scope.Name='';
	            	$scope.Birthday='';
	            	$scope.Email='';
	            });
	            res.error(function(data, status, headers, config) {
	   				$('.regMessage').append("<div class='alert alert-danger alert-dismissable'>"+
	   				"<a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>" +
	   				"Произошла ошибка! Пользователь не был зарегистрирован!</div>");
	            });
	            $("a[href='#reg']").click(function (){
		            $('.regMessage').empty();
		        });
	    	}; 

	//update user
	   $scope.updUser = function(){ 
	        	var role = document.getElementsByTagName("input").role.value;
	        	console.log(role);
	        	var Id = $("select option:selected").val();
	        	var cls = "Users."+role;
	        	var user = $("select option:selected").text();
	        	var url = "http://localhost:57772/brs/form/object/"+cls+"/"+Id;
	            var dataObj = {
		  			_class : cls,
	                Username : user,
	                Name : $scope.Name,
	                Surname : $scope.Surname
	            }; 
	            var res = $http.put(url, JSON.stringify(dataObj));
	            res.success(function(data, status, headers, config) {
	            var objId = data.Id;
	 				$('.regMessage').append("<div class='alert alert-success alert-dismissable'>"+
	 				"<a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>"+
	 				"Пользователь изменен!</div>");
	            	$scope.Login='';
	            	$scope.Password='';
	            	$scope.Surname='';
	            	$scope.Name='';
	            	$scope.Birthday='';
	            	$scope.Email='';
	            });
	            res.error(function(data, status, headers, config) {
	   				$('.regMessage').append("<div class='alert alert-danger alert-dismissable'>"+
	   				"<a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>" +
	   				"Произошла ошибка! Пользователь не был изменен!</div>");
	            });
	            $("a[href='#reg']").click(function (){
		            $('.regMessage').empty();
		        });
	    	}; 
	}

	// Active rows in table realization
	$(".grid").ready(function(){
	$(".grid tbody").on("click", "tr", function(){
		var that = $(this);
	    var currentRow = that[0].cells[0].innerText;
	    var Id = global["'"+currentRow+"'"];
	    console.log(Id);
	    localStorage.setItem('Id', Id);
	    $(this).addClass('active').siblings().removeClass('active');	
	});
	});
		
		// delete button
		function deleteData(){
			var Id = localStorage.getItem("Id");
			var $role = $("input[name='role']").val()
			var cls = "Users."+$role;
			var url = "http://localhost:57772/brs/form/object/"+cls+"/"+Id;
			var data = {
		  			_class : cls,
	                id : Id
	            }; 
			var res = $.ajax({
	  			method: "DELETE",
	  			url: url,
	  			data: JSON.stringify(data)
			});
			/*
	  		res.success(function(data, status, headers, config) {
	            var objId = data;
	 				$('.regMessage').append("<div class='alert alert-success alert-dismissable'>"+
	 				"<a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>"+
	 				"Пользователь удален!</div>");
	            });
	        res.error(function(data, status, headers, config) {
	   				$('.regMessage').append("<div class='alert alert-danger alert-dismissable'>"+
	   				"<a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a>" +
	   				"Ошибка удаления пользователя!</div>");
	            });
	            */
		}

	/*
	    // create button
	    function createData(){
		    window.location.href = "#reg";
			$("#first").removeClass("active");
			$("#second").addClass("active");
		}
		
		// update button
		function updateData(){
			$("#first").removeClass("active");
			$("#second").addClass("active");
			//window.location.href = "#reg";
		}
	*/
	</script>

	</body>
	</html>